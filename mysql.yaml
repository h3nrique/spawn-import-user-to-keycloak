apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-data
  labels:
    app: mysql
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: Secret
metadata:
  name: mysql
  labels:
    app: mysql
stringData:
  MYSQL_ROOT_PASSWORD: "admin"
  MYSQL_DATABASE: "eigr"
  MYSQL_USER: "admin"
  MYSQL_PASSWORD: "admin"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  labels:
    app: mysql
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  revisionHistoryLimit: 5
  progressDeadlineSeconds: 600
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
        - name: mysql
          imagePullPolicy: IfNotPresent
          image: docker.io/library/mysql:8
          env:
            - name: TZ
              value: 'America/Sao_Paulo'
          envFrom:
            - secretRef:
                name: mysql
          ports:
            - name: "tcp-3306"
              containerPort: 3306
              protocol: TCP
          resources:
            requests:
              cpu: 500m
              memory: 768Mi
            limits:
              cpu: 500m
              memory: 1Gi
          readinessProbe:
            tcpSocket:
              port: 3306
            initialDelaySeconds: 30
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: 3306
            initialDelaySeconds: 30
            periodSeconds: 10
          volumeMounts:
            - mountPath: /var/lib/mysql
              name: mysql-data
      volumes:
        - name: mysql-data
          persistentVolumeClaim:
            claimName: mysql-data
---
apiVersion: v1
kind: Service
metadata:
  name: mysql
  labels:
    app: mysql
spec:
  ports:
    - name: "tcp-3306"
      protocol: TCP
      port: 3306
      targetPort: "tcp-3306"
  selector:
    app: mysql
